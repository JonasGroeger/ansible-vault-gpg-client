#!/usr/bin/env python3

"""
A script that allows to keep Ansible Vault passwords in gpg encrypted files.
"""

import argparse
import configparser
import os
import subprocess
import textwrap
import shutil
import sys


def log(s):
    if os.environ.get("VAULT_GPG_CLIENT_DEBUG"):
        print(f"[DEBUG] vault-gpg-client: {s}", file=sys.stderr)


try:
    ansible_config_file = os.environ["ANSIBLE_CONFIG"]
except KeyError:
    cfg = os.path.join(os.getcwd(), "ansible.cfg")
    if os.path.isfile(cfg):
        ansible_config_file = cfg
    else:
        ansible_config_file = os.path.expanduser("~/.ansible.cfg")


def get_vault_id():
    parser = argparse.ArgumentParser(
        description="Get a vault password from a encrypted GPG file",
        epilog="Please read the README.md file for more info.",
        allow_abbrev=False,
    )

    parser.add_argument(
        "--vault-id",
        action="store",
        default="default",
        dest="vault_id",
        help="filename (without .gpg) containing the vault password",
    )

    vault_id = parser.parse_args().vault_id.strip()

    return vault_id


def get_config_path():
    if ansible_config_file:
        log(f"Found ansible.cfg @ {ansible_config_file}")
        try:
            config = configparser.ConfigParser()
            config.read(ansible_config_file)
            config_path = config.get("vault", "gpg", fallback="").strip()
        except (configparser.NoOptionError, configparser.NoSectionError):
            pass
    else:
        pass

    config_path = os.path.abspath(config_path)

    log(f"Will load vaults by label from {config_path}")

    return config_path


def gpg_decrypt(f):
    gpg = "gpg2"

    if shutil.which(gpg) is None:
        raise FileNotFoundError(f"No {gpg} executable found.")

    log(f"Trying to decrypt vault password file {f}")

    gpg_command = [gpg, "--quiet", "--batch", "--use-agent", "--decrypt", f]
    return subprocess.check_output(gpg_command).strip().decode("UTF-8")


def main():
    vault_id = get_vault_id()
    config_path = get_config_path()

    vault_gpg_password_file = os.path.join(config_path, f"{vault_id}.asc")

    log(f"Trying to load vault password file @ {vault_gpg_password_file}")

    if os.path.isfile(vault_gpg_password_file):
        password = gpg_decrypt(vault_gpg_password_file)
        print(password, end="")
        exit(0)
    else:
        log(
            textwrap.dedent(
                f"""\
            No vault password file found @ {vault_gpg_password_file}
            Try a ansible.cfg with the following set:

            [vault]
            gpg = path/to/password/files/

            Also, check the documentation.
        """
            )
        )
        exit(1)


if __name__ == "__main__":
    main()
